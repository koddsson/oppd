012 is the counter from 999 down to 0
3456789 10 11 12 13 14 15 are temp numbers
16 and up is sum backwards (1234 will be 4321 in memory)
first number will be 999 into the sum so the fourth number (20)
will be an end of memory character (20)=10 This character will
be shifted as the sum increases in length and will be used to
find out from where to start printing the solution in the end

>>>+++++++++[<<<+>+>+>-] 9990{0_3} ;3
<----> DEBUG set to 995
>>>>>>>>>>>>>>>>>       ;20
--  (20)=254 EOF        ;20
<<<<<<<<<<<<<<          ;6

init (6)=(0)plus(1)plus(2)

<<[-]<[-]> (3) = (4) = 0   ;4

(3) = (3) plus (2)
<<[>+>+<<-] (3) = (4) = (2) and (2) = 0 ;2
>>[<<+>>-]  (2) = (4) and (4) = 0       ;4

(3) = (3) plus (1)
<<<[>>+>+<<<-]  (3) = (3) plus (1) and (4) = (1) and (1) = 0 ;1
>>>[<<<+>>>-]   (1) = (4) and (4) = 0   ;4

(3) = (3) plus (1)
<<<<[>>>+>+<<<<-] (3) = (3) plus (0) and (4) = (0) and (0) = 0 ;0
>>>>[<<<<+>>>>-] (0) = (4) and (4) = 0  ;4
< ;3
[
    [-]>[-]>[-]    (5) = 0 and (4) = 0 and (3) = 0     ;3
    <<<[>+>+>+<<<-]   (5) = (4) = (3) = (2) and (2) = 0   ;2
    >>>[<<<+>>>-]   (2) = (5)   ;5
    +++++           (5) = 5     ;5

    (3) = (3) is 5
 
    >[-]>[-]                ;7
    <<<<3[>>>>7+<<<<3-]+    ;3
    >>5[>>7-<6+<5-]         ;5
    >6[<5+>6-]              ;6
    >7[<<<<3->>>>7[-]]      ;7

    (4) = (4) is 0
    <<[-]   (5) = 0         ;5

    >6[-]>7[-]          ;7
    <<<4[>>>7+<<<4-]+   ;4
    >5[>>7-<6+<5-]      ;5
    >6[<5+>6-]          ;6
    >7[<<<4->>>7[-]]    ;7

    (3) = (3) or (4)

    <<5[-]>6[-]         ;6
    <<<3[>>>6+<<<3-]    ;3
    >>>6[<<<3->>>6[-]]  ;6
    <<4[>>6+<5+<4-]>5[<4+>5-]   ;5
    >6[<<<3[-]->>>6[-]] ;6

    if (3):
        temp 3 in use

        0 = (4)
        1 = (5)
        x = (3)

        <<4[-]>5[-]                 ;5
        <<3[>4+>5+<<3-]>4[<3+>4-]+  ;4
        >5[     ;5
            (16) = (16) plus (2)
            >6[-]   ;6
            <<<<2[>>>>>>>>>>>>>>16+<<<<<<<<<<6+<<<<2-]          ;2
            >>>>6[<<<<2+>>>>6-]         ;6

            (17) = (17) plus (1)
            <<<<<1[>>>>>>>>>>>>>>>>17+<<<<<<<<<<<6+<<<<<1-]     ;1
            >>>>>6[<<<<<1+>>>>>6-]      ;6

            (18) = (18) plus (0)
            <<<<<<0[>>>>>>>>>>>>>>>>>>18+<<<<<<<<<<<<+<<<<<<0-] ;0
            >>>>>>6[<<<<<<0+>>>>>>6-]   ;6
            <<-   ;4
        >5[-]]    ;5
        <4[         ;3
        else:
            >>>>>[-]   (9)=0   ;9
            
            (9) = (9) plus (0)
            >10[-]  (10)=0      ;10
            <<<<<<<<<<0[>>>>>>>>>9+>10+<<<<<<<<<<0-]    ;0
            >>>>>>>>>>10[<<<<<<<<<<0+>>>>>>>>>>10-]     ;10

            (9) = (9) plus (1)
            <<<<<<<<<1[>>>>>>>>9+>10+<<<<<<<<<1-]   ;1
            >>>>>>>>>10[<<<<<<<<<1+>>>>>>>>>10-]    ;10

            (9) = (9) plus (2)
            <<<<<<<<2[>>>>>>>9+>10+<<<<<<<<2-]  ;2 
            >>>>>>>>10[<<<<<<<<2+>>>>>>>>10-]   ;10
            >[-]+++ (11)=3  ;11
            >[-]>[-]>[-]>[-]<<<<<< 12 to 15 = 0 ;9

            divmod algo needs 7 temporary numbers
                (9)=total
                (10)=0
                (11)=divideby
                (12)=(13)=(14)=(15)=0

                after
                (9)=0
                (10)=total
                (11)=crap
                (12)=mod
                (13)=crap

            divmod from esolangs algos:
            [->+>-[>+>>]>[+[-<+>]>+>>]<<<<<<]   ;9
            
            if (12) == 0:
                print 12
            [-]+>[-] (9)=1 and (10)=0       ;10
            >>12[<<<9->>>12[<<10+>>12-]]    ;12
            <<10[>>12-<<10-]                ;10
            <9[

            ===TODO REMOVE BELOW
                <<<<[-]        ;5
                ++++++++++
                ++++++++++
                ++++++++++
                ++++++++++
                ++++++++    (5)=48
                [<<+<+<+<+>>>>>-] ;5
                <<<<<.>.>.>      ;3
                [<-<-<->>>-]    ;3
                ++++++++++. space   ;3

            ===TODO REMOVE ABOVE
            >>>>>>9-]   ;9
        <<<<<4-]     ;4
                
            
    >[-] (5) = 0 (1)==0 check      ;5
   
    if (2) == 0: 
    <<3[-]>4[-]                  ;4
    <<2[>3+>4+<<2-]>3[<2+>3-]+  ;3
    >4[<3->4[-]]                ;4
    <3[                         ;3
        #
        <+++++++++ (2) = 9      ;2
        >>>>>>[-]   (8) = 0     ;8
        <<<<<<<[>>>>>>>+>+<<<<<<<<-] (8)=(9)=(1) and (1)=0  ;1
        >>>>>>>>[<<<<<<<<+>>>>>>>>-] (1)=(9) and (9)=0  ;9
        
        if (8):
            reduce (1)
        
        else:
            (1) = 9
            reduce (0)
 
        0 = (6)
        1 = (7)
        x = (8) 

        if (8)
        <<<6[-]+>7[-]     ;7
        >8[             ;8
            reduce (1)
            <<<<<<<-    ;1
            >>>>>6-     ;6
            >>8[<7+>8-] ;8
        ]
        else:
        <7[>8+<7-]      ;5
        <6[            ;6
            (1) = 9
            <<<<<+++++++++  ;1
            reduce (0)
            <-          ;0
        >>>>>>6-]        ;6

        <+   (5) = 1 do not reduce 2 ;5
    <<-3]                       ;3

    if (5) == 0: reduce 2
        >>>[-]+         ;6
        >[-]            ;7
        <<5[>6-<5[>>7+<<5-]]    ;5
        >>7[<<5+>>7-]   ;7
        <[              ;6
            <<<<-   reduce (2) ;2
        >>>>-]          ;6

SLED START
(14)=11 to park sled after running
goto (15)=1 and and start sled
>>>>>>>>[-]-    (14)=255    ;14
>[-]+                       ;15
[
    >      ;C
SLED:
    C = current
    N = next
    T = third
    temp0   10 TTR
    temp1   11 TTR
    temp2   12 TTR
    temp3   13 TTR

    if C != EOF:
    ++[     if C is 254 plusplus will set to 0
        -- set back to what it was since it wasn't 254
        
        temp0 = 9
        >>>>>>>>>>t0[-]+++++++++=9  ;t0
        
        temp1 = C
        >>[-]t2<[-]t1       ;t1
        <<<<<<<<<<<C[>>>>>>>>>>>+>+<<<<<<<<<<<<-]   ;C
        >>>>>>>>>>>>[<<<<<<<<<<<<+>>>>>>>>>>>>-]    ;t2
        #

        temp0 = temp0 less temp1
        
        if temp0:
            C minus 10
            temp1 = EOF
            temp1 = temp1 == N
            if temp1:
                T = N (N=0)
            N increased by 1 
    ]

GOTO new C
]     ;C


SLED END

<<<[-]>[-] (3) = (4) = 0   ;4

TODO Fix result counters that are above 9
(3) = (3) plus (2)
<<[>+>+<<-] (3) = (4) = (2) and (2) = 0 ;2
>>[<<+>>-]  (2) = (4) and (4) = 0       ;4

(3) = (3) plus (1)
<<<[>>+>+<<<-]  (3) = (3) plus (1) and (4) = (1) and (1) = 0    ;1
>>>[<<<+>>>-]   (1) = (4) and (4) = 0   ;4

(3) = (3) plus (1)
<<<<[>>>+>+<<<<-] (3) = (3) plus (0) and (4) = (0) and (0) = 0  ;0
>>>>[<<<<+>>>>-] (0) = (4) and (4) = 0  ;4
<] ;3

>>>>>>>>>>>>[-]     ;15
++++++++++
++++++++++
++++++++++
++++++++++
++++++++    (15)=48 ;15

[>+>+>+>+>+>+<<<<<<-]
>>>>>>
.<.<.<.<.<.<
